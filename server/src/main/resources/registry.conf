## seata-server 注册中心
registry {
  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa
  type = "nacos"

  nacos {
    application = "seata-server-localhost"
    # serverAddr = "127.0.0.1:8888"
    serverAddr = "192.168.1.63:8848"
    group = "MY_SEATA_GROUP"
    namespace = "local-test"
#     namespace = "abcd1234"
    #namespace = "2607931d-fa37-4743-81b5-ebdc39781c54"
#     namespace = "anonymous"
    cluster = "default"
    #username = "nacos"
    #password = "nacos"
  }
  eureka {
    serviceUrl = "http://localhost:8761/eureka"
    application = "default"
    weight = "1"
  }
  redis {
    serverAddr = "localhost:6379"
    db = 0
    password = ""
    cluster = "default"
    timeout = 0
  }
  zk {
    cluster = "default"
    serverAddr = "127.0.0.1:2181"
    sessionTimeout = 6000
    connectTimeout = 2000
    username = ""
    password = ""
  }
  consul {
    cluster = "default"
    serverAddr = "127.0.0.1:8500"
    aclToken = ""
  }
  etcd3 {
    cluster = "default"
    serverAddr = "http://localhost:2379"
  }
  sofa {
    serverAddr = "127.0.0.1:9603"
    application = "default"
    region = "DEFAULT_ZONE"
    datacenter = "DefaultDataCenter"
    cluster = "default"
    group = "SEATA_GROUP"
    addressWaitTime = "3000"
  }
  file {
    name = "file.conf"
  }
}
### seata-server 配置中心中心: 如果是 file 才会读取 file.conf
config {
  # file、nacos 、apollo、zk、consul、etcd3
  type = "nacos"

    # io.seata.config.nacos.NacosConfiguration
  nacos {
    serverAddr = "192.168.1.63:8848"
#     serverAddr = "localhost:8888"
    #namespace = "6e9d8748-d82f-496d-b4a2-bb66004bc1ce"
    namespace = "local-test" # 不指定就是默认 空串
    #namespace = "2607931d-fa37-4743-81b5-ebdc39781c54" # 不指定就是默认 空串
    group = "MY_SEATA_GROUP"
    username = "nacos"
    password = "nacos"
    # seata-server 配置文件
    # io.seata.config.nacos.NacosConfiguration.initSeataConfig
    # io.seata.config.nacos.NacosConfiguration.DEFAULT_DATA_ID: seata.properties
     dataId = "seataServer.properties"
  }
  consul {
    serverAddr = "127.0.0.1:8500"
    aclToken = ""
  }
  apollo {
    appId = "seata-server"
    ## apolloConfigService will cover apolloMeta
    apolloMeta = "http://192.168.1.204:8801"
    apolloConfigService = "http://192.168.1.204:8080"
    namespace = "application"
    apolloAccesskeySecret = ""
    cluster = "seata"
  }
  zk {
    serverAddr = "127.0.0.1:2181"
    sessionTimeout = 6000
    connectTimeout = 2000
    username = ""
    password = ""
    nodePath = "/seata/seata.properties"
  }
  etcd3 {
    serverAddr = "http://localhost:2379"
  }
  file {
    name = "file.conf"
    # name = "config.txt"
  }
}
